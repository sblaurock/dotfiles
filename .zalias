# Implicit flags
alias rsync='rsync --progress'
alias mount='mount |column -t'
alias jobs='jobs -l'
alias ping='ping -c 5'
alias wget='wget -c'

# Always 'sudo' when rebooting
if [ $UID -ne 0 ]; then
  alias reboot='sudo reboot'
fi

# Restore saved Vim session
alias vims='vim -S ~/.vim/session.vim'

# Open modified files tracked by Git in Vim
alias gim='vim $(git ls-files -m | grep -v "/build/") -p'

# Clean all Git branches that have been merged to master (clean merged)
alias gitcm='git checkout master; git pull origin master; git branch --merged | grep -v "\*" | xargs -n 1 git branch -d'

# Show Git status of current branch against master (start stat)
alias gitss='git diff --stat=120,100 origin/master...HEAD "$@"'

# Show Git diff of current branch against master (start diff)
alias gitsd='git diff origin/master...HEAD "$@"'

# Cut a branch from remote master (branch master)
alias gitbm='git checkout master; git pull origin master; git checkout -b "$@"'

# Colorful Git log (color log)
alias gitcl='git log --color --graph --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit'

# Lock OS
alias lock='/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend'

# Get public IP
alias ip='dig +short myip.opendns.com @resolver1.opendns.com'

# Flush Directory Service cache
alias flush='dscacheutil -flushcache'

# Empty trash on all mounted volumes and main drive
alias emptytrash='sudo rm -rfv /Volumes/*/.Trashes; sudo rm -rfv ~/.Trash;'

# Start a HTTP webserver with optional port
function serve() {
  local port="${1:-8000}"
  open "http://localhost:${port}/"
  python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

# Change directory to forefront Finder window
function finder() {
  cd "`osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)'`"
}

# Perform a Google search for query
function google() {
  open "http://www.google.com/search?q=${(j: :)@}"
}

# List the largest files in current directory
function largest() {
  find ${1:-.} -type f -exec ls -al {} \; | sort -nr -k5 | head -n 20
}

# Generate a random string of characters
function strgen() {
  local length="${1:-24}"
  LC_CTYPE=C tr -dc 'A-Za-z0-9_' < /dev/urandom | head -c ${length} | xargs
}

# Get headers for request
alias headers='curl -I'

# Extract archive based on filetype
function extract() {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)  tar xjf $1      ;;
      *.tar.gz)   tar xzf $1      ;;
      *.bz2)      bunzip2 $1      ;;
      *.rar)      unrar e $1      ;;
      *.gz)       gunzip $1       ;;
      *.tar)      tar xf $1       ;;
      *.tbz2)     tar xjf $1      ;;
      *.tgz)      tar xzf $1      ;;
      *.zip)      unzip $1        ;;
      *.Z)        uncompress $1   ;;
      *.7z)       7z x $1         ;;
      *)          echo "'$1' cannot be extracted" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Conduct a speed test
function speedtest() {
  local realm="${1:-useast}"

  case $realm in
    'useast')     location='http://speedtest.newark.linode.com/100MB-newark.bin'        ;;
    'uswest')     location='http://speedtest.fremont.linode.com/100MB-fremont.bin'      ;;
    'ussouth')    location='http://speedtest.atlanta.linode.com/100MB-atlanta.bin'      ;;
    'uscentral')  location='http://speedtest.dallas.linode.com/100MB-dallas.bin'        ;;
    'de')         location='http://speedtest.frankfurt.linode.com/100MB-frankfurt.bin'  ;;
    'uk')         location='http://speedtest.london.linode.com/100MB-london.bin'        ;;
    'sg')         location='http://speedtest.singapore.linode.com/100MB-singapore.bin'  ;;
    'ja')         location='http://speedtest.tokyo.linode.com/100MB-tokyo.bin'          ;;
    *)            location=$1                                                           ;;
  esac

  wget --output-document=/dev/null $location
}

# List all socket connections
alias sockets='sudo lsof -i -P'

# Toggle display of hidden files within Finder
alias showhidden='defaults write com.apple.finder AppleShowAllFiles TRUE; sudo killall Finder'
alias hidehidden='defaults write com.apple.finder AppleShowAllFiles FALSE; sudo killall Finder'

# Identify highest usage processes
alias topmem='ps wwaxm -o pid,stat,vsize,rss,time,command | head -10'
alias topcpu='ps wwaxr -o pid,stat,%cpu,time,command | head -10'

# Source custom alias file
if [[ -s "${ZDOTDIR:-$HOME}/.zalias-custom" ]]; then
  source "${ZDOTDIR:-$HOME}/.zalias-custom"
fi
